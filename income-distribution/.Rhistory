incomes <- read.csv("C:\Users\duane\repos\code\income-distribution\kaggle_income.csv")
incomes <- read.csv("C:/Users/duane/repos/dedmonds/code/income-distribution/kaggle_income.csv")
View(incomes)
library(readxl)
all_races <- read_excel("census_gov_2018/allraces_finc02_1_1.xls",
range = "A14:B54", col_names = FALSE)
library(readxl)
asian_alone <- read_excel("census_gov_2018/asian_alone_finc02_1_8.xls",
range = "A14:B54", col_names = FALSE)
all_races <- read_excel("census_gov_2018/all_races.xls", range = "A14:B54", col_names = FALSE)
asian_alone <- read_excel("census_gov_2018/asian_alone.xls", range = "A14:B54", col_names = FALSE)
asian_comb <- read_excel("census_gov_2018/asian_comb.xls", range = "A14:B54", col_names = FALSE)
black_alone <- read_excel("census_gov_2018/black_alone.xls", range = "A14:B54", col_names = False)
black_comb <- read_excel("census_gov_2018/black_comb.xls", range = "A14:B54", col_names = False)
hispanic <- read_excel("census_gov_2018/hispanic.xls", range = "A14:B54", col_names = False)
white_alone <- read_excel("census_gov_2018/white_alone.xls", range = "A14:B54", col_names = False)
white_alone_nonhispanic <- read_excel("census_gov_2018/white_alone_nonhispanic.xls", range = "A14:B54", col_names = False)
white_comb <- read_excel("census_gov_2018/white_comb.xls", range = "A14:B54", col_names = False)
all_races <- read_excel("census_gov_2018/all_races.xls", range = "A14:B54", col_names = FALSE)
asian_alone <- read_excel("census_gov_2018/asian_alone.xls", range = "A14:B54", col_names = FALSE)
asian_comb <- read_excel("census_gov_2018/asian_comb.xls", range = "A14:B54", col_names = FALSE)
black_alone <- read_excel("census_gov_2018/black_alone.xls", range = "A14:B54", col_names = FALSE)
black_comb <- read_excel("census_gov_2018/black_comb.xls", range = "A14:B54", col_names = FALSE)
hispanic <- read_excel("census_gov_2018/hispanic.xls", range = "A14:B54", col_names = FALSE)
white_alone <- read_excel("census_gov_2018/white_alone.xls", range = "A14:B54", col_names = FALSE)
white_alone_nonhispanic <- read_excel("census_gov_2018/white_alone_nonhispanic.xls", range = "A14:B54", col_names = FALSE)
white_comb <- read_excel("census_gov_2018/white_comb.xls", range = "A14:B54", col_names = FALSE)
View(white_comb)
white$comb[1]
knitr::opts_chunk$set(echo = TRUE)
names(all_races)
names(all_races) <- c("date_range", "n")
names(all_races) <- c("date_range", "n")
names(all_races) < c("date_range", "n")
names(asian_alone) < c("date_range", "n")
names(asian_comb) < c("date_range", "n")
names(black_alone) < c("date_range", "n")
names(black_comb) < c("date_range", "n")
names(hispanic) < c("date_range", "n")
names(white_alone) < c("date_range", "n")
names(white_alone_nonhispanic) < c("date_range", "n")
names(white_comb) < c("date_range", "n")
names(all_races) <- c("date_range", "n")
names(all_races) <- c("date_range", "n")
names(asian_alone) <- c("date_range", "n")
names(asian_comb) <- c("date_range", "n")
names(black_alone) <- c("date_range", "n")
names(black_comb) <- c("date_range", "n")
names(hispanic) <- c("date_range", "n")
names(white_alone) <- c("date_range", "n")
names(white_alone_nonhispanic) <- c("date_range", "n")
names(white_comb) <- c("date_range", "n")
o <- vector(mode="numeric",length=10)
c
o
rep(o)
rep(o,10)
rep("asian_alone",10)
asian_alone[1]
asian_alone[,1]
asian_alone$n[1]
o
o <- all_races
separate(o," to ")
library(tidyverse)
separate(o," to ")
separate(o$date_range," to ")
class(o$date_range)
separate( o, date_range, into=c("low","high"), sep=" to ")
o <- separate( o, date_range, into=c("low","high"), sep=" to ")
tail(o)
# split date range into two variables, a minimum and maximum for the income range
all_races <- separate( all_races, date_range, into=c("low","high"), sep=" to ")
class(all_races$low)
all_races$low[1]
regmatches(all_races$low,"[0-9,]+")
regmatches(all_races$low,"[0-9]+")
regmatches(all_races$low,rep("[0-9,]+",nrow(all_races)))
rep("[0-9,]+",nrow(all_races))
length(rep("[0-9,]+",nrow(all_races)))
length(all_races$low)
regmatches(all_races$low,m=rep("[0-9,]+",nrow(all_races)))
x <- "asld;kfj;lkj $9,618 "
str_view(x,"[0-9]+")
install.packages("htmlwidgets")
library(htmlwidgets)
str_view(x,"[0-9]+")
str_view(x,"[0-9]\+")
str_view(x,"[0123456789]+")
str_view(x,"[0123456789,]+")
stringr::str_match(all_races$low,m=rep("[0-9,]+",nrow(all_races)))
stringr::str_match(all_races$low,rep("[0-9,]+",nrow(all_races)))
all_races$low <- tringr::str_match(all_races$low,rep("[0-9,]+",nrow(all_races)))
all_races$low <- str_match(all_races$low,rep("[0-9,]+",nrow(all_races)))
all_races$high <- str_match(all_races$high,rep("[0-9,]+",nrow(all_races)))
tail(all_races)
head(all_races)
all_races$high[1] <- all_races$low[1] # handle exceptions - first observation
all_race$low[1] <- 0
all_races$low[1] <- 0
head(all_races)
all_races$low <- as.numeric(all_races$low)
all_races$high <- as.numeric(all_races$high)
head(all_races)
tail(all_races)
# U.S. Government Census Data (2018)
all_races <- read_excel("census_gov_2018/all_races.xls", range = "A14:B54", col_names = FALSE)
asian_alone <- read_excel("census_gov_2018/asian_alone.xls", range = "A14:B54", col_names = FALSE)
asian_comb <- read_excel("census_gov_2018/asian_comb.xls", range = "A14:B54", col_names = FALSE)
black_alone <- read_excel("census_gov_2018/black_alone.xls", range = "A14:B54", col_names = FALSE)
black_comb <- read_excel("census_gov_2018/black_comb.xls", range = "A14:B54", col_names = FALSE)
hispanic <- read_excel("census_gov_2018/hispanic.xls", range = "A14:B54", col_names = FALSE)
white_alone <- read_excel("census_gov_2018/white_alone.xls", range = "A14:B54", col_names = FALSE)
white_alone_nonhispanic <- read_excel("census_gov_2018/white_alone_nonhispanic.xls", range = "A14:B54", col_names = FALSE)
white_comb <- read_excel("census_gov_2018/white_comb.xls", range = "A14:B54", col_names = FALSE)
# add variable names
names(all_races) <- c("date_range", "n")
names(all_races) <- c("date_range", "n")
names(asian_alone) <- c("date_range", "n")
names(asian_comb) <- c("date_range", "n")
names(black_alone) <- c("date_range", "n")
names(black_comb) <- c("date_range", "n")
names(hispanic) <- c("date_range", "n")
names(white_alone) <- c("date_range", "n")
names(white_alone_nonhispanic) <- c("date_range", "n")
names(white_comb) <- c("date_range", "n")
# split date range into two variables, a minimum and maximum for the income range
all_races <- separate( all_races, date_range, into=c("low","high"), sep=" to ")
all_races$high[1] <- all_races$low[1] # handle exceptions - first observation
all_races$low[1] <- 0
all_races$low <- str_match(all_races$low,rep("[0-9,]+",nrow(all_races)))
all_races$high <- str_match(all_races$high,rep("[0-9,]+",nrow(all_races)))
View(all_races)
gsub(",","",all_races$low)
# STOP
all_races$low <- as.numeric(gsub(",","",all_races$low))
all_races$high <- as.numeric(gsub(",","",all_races$high))
head(all_races)
tail(all races)
tail(all_races)
# U.S. Government Census Data (2018)
all_races <- read_excel("census_gov_2018/all_races.xls", range = "A14:B54", col_names = FALSE)
asian_alone <- read_excel("census_gov_2018/asian_alone.xls", range = "A14:B54", col_names = FALSE)
asian_comb <- read_excel("census_gov_2018/asian_comb.xls", range = "A14:B54", col_names = FALSE)
black_alone <- read_excel("census_gov_2018/black_alone.xls", range = "A14:B54", col_names = FALSE)
black_comb <- read_excel("census_gov_2018/black_comb.xls", range = "A14:B54", col_names = FALSE)
hispanic <- read_excel("census_gov_2018/hispanic.xls", range = "A14:B54", col_names = FALSE)
white_alone <- read_excel("census_gov_2018/white_alone.xls", range = "A14:B54", col_names = FALSE)
white_alone_nonhispanic <- read_excel("census_gov_2018/white_alone_nonhispanic.xls", range = "A14:B54", col_names = FALSE)
white_comb <- read_excel("census_gov_2018/white_comb.xls", range = "A14:B54", col_names = FALSE)
# add variable names
names(all_races) <- c("date_range", "n")
names(all_races) <- c("date_range", "n")
names(asian_alone) <- c("date_range", "n")
names(asian_comb) <- c("date_range", "n")
names(black_alone) <- c("date_range", "n")
names(black_comb) <- c("date_range", "n")
names(hispanic) <- c("date_range", "n")
names(white_alone) <- c("date_range", "n")
names(white_alone_nonhispanic) <- c("date_range", "n")
names(white_comb) <- c("date_range", "n")
# split date range into two variables, a minimum and maximum for the income range
all_races <- separate( all_races, date_range, into=c("low","high"), sep=" to ")
all_races$high[1] <- all_races$low[1] # handle exceptions - first observation
all_races$low[1] <- 0
all_races$high[nrow(all_races)] <- 250000
all_races$low <- str_match(all_races$low,rep("[0-9,]+",nrow(all_races)))
all_races$high <- str_match(all_races$high,rep("[0-9,]+",nrow(all_races)))
#str_view(x,"[0123456789,]+")
all_races$low <- as.numeric(gsub(",","",all_races$low))
all_races$high <- as.numeric(gsub(",","",all_races$high))
# for each observation in each data frame.
# two vectors. the first is the demographic category the length of $n.
# the second is the mean annual income the length of $n.
# demographic. income. ($n times)
#rep("asian",asian_alone$n)  # TODO
all_races %>% mutate(income=mean(low,high))
all_races %>% mutate(income=low+high)
all_races %>% mutate( income = mean( c(low,high) ) )
all_races %>% mutate( income = (low + high)/2 )
all_races <- all_races %>% mutate( income = (low + high)/2 )
data.frame(c(NA,NA))
data.frame(c(as.character(NA),as.numeric(NA)))
View(data.frame(c(as.character(NA),as.numeric(NA))))
data.frame(c("sometext",618))
data.frame( demographic = rep("asian",n[1]), income=income )  # create data frame
h_incomes <- data.frame( demographic = rep("asian",n[1]), income = rep(income,n[1]) )  # create data frame
h_incomes <- data.frame( demographic = rep("asian",asian_alone$n[1]), income = rep(income,asian_alone$n[1]) )  # create data frame
h_incomes <- data.frame( demographic = rep("asian",asian_alone$n[1]), income = rep(asian_alone$income,asian_alone$n[1]) )  # create data frame
h_incomes <- data.frame( demographic = rep("asian",asian_alone$n[1]), income = rep(asian_alone$income,asian_alone$n[1]) )  # create data frame
rep("asian",asian_alone$n[1]
)
rep(asian_alone$income,asian_alone$n[1])
asian_alone <- asian_alone %>% mutate( income = (low + high)/2 )
# split date range into two variables, a minimum and maximum for the income range
asian_alone <- separate( asian_alone, date_range, into=c("low","high"), sep=" to ")
asian_alone$high[1] <- asian_alone$low[1] # handle exceptions - first observation
asian_alone$low[1] <- 0
asian_alone$high[nrow(asian_alone)] <- 250000
asian_alone$low <- str_match(asian_alone$low,rep("[0-9,]+",nrow(asian_alone)))
asian_alone$high <- str_match(asian_alone$high,rep("[0-9,]+",nrow(asian_alone)))
#str_view(x,"[0123456789,]+")
asian_alone$low <- as.numeric(gsub(",","",asian_alone$low))
asian_alone$high <- as.numeric(gsub(",","",asian_alone$high))
asian_alone <- asian_alone %>% mutate( income = (low + high)/2 )
h_incomes <- data.frame( demographic = rep("asian",asian_alone$n[1]), income = rep(asian_alone$income,asian_alone$n[1]) )  # create data frame
View(h_incomes)
View(asian_alone)
asian_alone$n[1]
h_incomes <- data.frame( demographic = rep("asian",asian_alone$n[1]), income = rep(asian_alone$income[1],asian_alone$n[1]) )  # create data frame
# create data frame
household_incomes <- data.frame( demographic = rep("asian",asian_alone$n[1]), income = rep(asian_alone$income[1],asian_alone$n[1]) )
# create data frame
household_incomes <- tibble( demographic = rep("asian",asian_alone$n[1]), income = rep(asian_alone$income[1],asian_alone$n[1]) )
class(household_incomes)
for (i in 2:nrow(asian_alone)) {
household_incomes %>% add_row( demographic = "asian", income = asian_alone$income[i] )
}
View(household_incomes)
o <- household_incomes
o %>% add_row( demographic = "black", income = "150000" )
o <- bind_rows(household_incomes, household_incomes)
View(o)
for (i in 2:nrow(asian_alone)) {
household_incomes <- bind_rows( household_incomes, tibble( demographic = rep("asian",asian_alone$n[i]), income = rep(asian_alone$income[i],asian_alone$n[i]) ) )
}
nrow(household_incomes)
sum(asian_alone$n)
household_incomes %>% geom_density( aes(y=income) )
household_incomes %>% ggplot() + geom_density( aes(y=income) )
household_incomes %>% ggplot() + geom_density( aes(x=income) )
household_incomes %>% ggplot() + geom_density( aes(x=income) fill="#00c0ff" )
household_incomes %>% ggplot() + geom_density( aes(x=income), fill="#00c0ff" )
household_incomes %>% ggplot() + geom_boxplot( aes(x=income) )
household_incomes %>% ggplot() + geom_boxplot( aes(y=income) )
source('/Volumes/persnl/repos/dedmonds/code/covid-19/covid-19.R')
Covid("New York")
Covid("Florida")
Covid("California")

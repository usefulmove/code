geom_boxplot( aes(fill=country) ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( main="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
theme_hc()
#wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot() +
#    geom_boxplot( aes(y=points, fill=country) ) +
#    xlab( "" ) + ylab( "wine ratings" ) +
#    ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#    theme_hc()
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
geom_boxplot( aes(fill=country) ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
theme_hc()
#wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot() +
#    geom_boxplot( aes(y=points, fill=country) ) +
#    xlab( "" ) + ylab( "wine ratings" ) +
#    ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#    theme_hc()
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
theme_hc()
library(RColorBrewer)
#wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot() +
#    geom_boxplot( aes(y=points, fill=country) ) +
#    xlab( "" ) + ylab( "wine ratings" ) +
#    ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#    theme_hc()
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
theme_hc() +
scale_color_brewer(palette = "Dark2")
#wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot() +
#    geom_boxplot( aes(y=points, fill=country) ) +
#    xlab( "" ) + ylab( "wine ratings" ) +
#    ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#    theme_hc()
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#theme_hc() +
scale_color_brewer(palette = "Dark2")
#wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot() +
#    geom_boxplot( aes(y=points, fill=country) ) +
#    xlab( "" ) + ylab( "wine ratings" ) +
#    ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#    theme_hc()
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
stat_boxplot(geom='errorbar', width=0.2) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
theme_hc() +
#wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot() +
#    geom_boxplot( aes(y=points, fill=country) ) +
#    xlab( "" ) + ylab( "wine ratings" ) +
#    ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#    theme_hc()
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
stat_boxplot(geom='errorbar', width=0.2) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
theme_hc()
#wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot() +
#    geom_boxplot( aes(y=points, fill=country) ) +
#    xlab( "" ) + ylab( "wine ratings" ) +
#    ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
#    theme_hc()
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
#stat_boxplot(geom='errorbar', width=0.2) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
theme_hc()
View(complaints)
death_rate = 1.0
heard_percentage = 0.60
library(dslabs)
data(murders)
View(murders)
murders %>% summarise(us=sum(population))
library(tidyverse)
murders %>% summarise(us=sum(population))
murders %>% summarise(us=sum(population)) %>% .$us
murders %>% summarise(us=sum(population)) %>% .$us -> population
population -> 328239523
population <- 328239523
heard_percentage -> herd_perc
rm(heard_percentage)
death_rate <- death_rate / 100
death_rate * herd_perc * population
knitr::opts_chunk$set(echo = TRUE)
# number of wine reviews
nrow(wine)
source('C:/Users/duane/repos/dedmonds/code/covid-19/covid-19.R')
source('C:/Users/duane/repos/dedmonds/code/covid-19/covid-19.R')
Covid("Texas")
Covid("California")
Covid("New York")
source('C:/Users/duane/repos/dedmonds/code/covid-19/covid-19.R')
library(NHANES)
install.packages("NHANES")
library(NHANES)
data(NHANES)
View(NHANES)
levels(NHANES$AgeDecade)
ref <- NHANES %>% filter(AgeDecade == " 20-29" & Gender == "female") %>% summarize( average == mean(BPSysAve, na.rm=TRUE), standard_deviation == sd(BPSysAve, na.rm=TRUE) )
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(forcats)
library(ggthemes)
library(RColorBrewer)
wine <- read.csv("C:/Users/duane/repos/dedmonds/code/wine/wine-reviews/winemag-data_first150k.csv")
# number of wine reviews
nrow(wine)
winestats <- wine %>%
group_by(country) %>%
summarise(count=n(),mu_rating=mean(points))
# top 10 in production
winestats %>%
arrange(desc(count)) %>%
top_n(10,count) %>%
select(-mu_rating)
# top 10 in quality
winestats %>%
arrange(desc(mu_rating)) %>%
top_n(10,mu_rating) %>%
select(-count)
# generate box plot wine ratings for the top 10 wine producing countries
# note: these are the countries with the most wines, rather than the countries with the most wine.
c_list <- wine %>%
group_by(country) %>%
summarise(count=n()) %>%
top_n(10,count) %>%
pull(country)  # list of global top ten wine producers
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
scale_color_fill_brewer(palette="Set3")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(forcats)
library(ggthemes)
library(RColorBrewer)
wine <- read.csv("C:/Users/duane/repos/dedmonds/code/wine/wine-reviews/winemag-data_first150k.csv")
# number of wine reviews
nrow(wine)
winestats <- wine %>%
group_by(country) %>%
summarise(count=n(),mu_rating=mean(points))
# top 10 in production
winestats %>%
arrange(desc(count)) %>%
top_n(10,count) %>%
select(-mu_rating)
# top 10 in quality
winestats %>%
arrange(desc(mu_rating)) %>%
top_n(10,mu_rating) %>%
select(-count)
# generate box plot wine ratings for the top 10 wine producing countries
# note: these are the countries with the most wines, rather than the countries with the most wine.
c_list <- wine %>%
group_by(country) %>%
summarise(count=n()) %>%
top_n(10,count) %>%
pull(country)  # list of global top ten wine producers
wine %>% filter(country %in% c_list) %>% group_by(country) %>% ggplot( aes(x=factor(country), y=points) ) +
geom_boxplot( aes(fill=country), show.legend=FALSE ) +
xlab( "" ) + ylab( "wine ratings" ) +
scale_fill_discrete( name="" ) +
ggtitle( "Wine Ratings for the Top 10 Wine-Producing Countries" ) +
scale_fill_brewer(palette="Set3")
display.brewer.all
display.brewer.all()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(lubridate)
library(readxl)
library(grid)
library(gridExtra)
program_time <- c(15.5,10,7)
#origin="2020-04-25 01:55"
doc_theme <- theme_minimal()  # document theme
# import complaint data frame
data_file <- "C:/Users/duane/repos/dedmonds/code/complaints_db/Complaint_Report_20180924_0024.xlsx"  # cora (win)
#data_file <- "/Volumes/persnl/repos/dedmonds/code/complaints_db/Complaint_Report_20180924_0024.xlsx"  # minic (osx)
complaints <- read_excel( data_file )
#    View( complaints )
# working data frame
c <- complaints %>% select(  # select and rename variables
id,
short_desc = summary,
status,
owner,
component,
resolution_status = resolution,
date = cf_occur_date,
step_count = cf_step_count,
account = cf_affected_units,
sn = cf_affected_units,
country = cf_country,
injury = cf_injury_description,
product = cf_product,
reportable = cf_reportable_event,
service_type = cf_service_type,
category = cf_complaint_category,
rca_category = cf_root_cause_type,
description,
resolution = cf_resolution,
root_cause = cf_root_cause,
investigation_status = cf_investigation_type,
investigation = cf_investigation_summary
)
# coerce factors
c <- c %>% mutate(
id = as.integer(id),
status = as.factor(status),
owner = as.factor(owner),
component = as.factor(component),
resolution_status = as.factor(resolution_status),
date = as.Date(date),
step_count = as.integer(step_count),
account = as.factor(account),
sn = as.factor(sn),
country = as.factor(country),
injury = as.factor(injury),
product = as.factor(product),
reportable = as.logical(reportable),
service_type = as.factor(service_type),
category = as.factor(category),
investigation_status = as.factor(investigation_status),
rca_category = as.factor(rca_category)  # root cause analysis type
)
levels(c$product) <- c("Ekso 1.1", "EksoGT", "Pick an option", "Ekso (1.0)")  # rename factors (levels)
# data cleaning
# add region variable and fill observations
c <- c %>% mutate(region="Unassigned")
c$region[c$country=="Austria"] <- "Europe"
c$region[c$country=="Denmark"] <- "Europe"
c$region[c$country=="FRANCE"] <- "Europe"
c$region[c$country=="Italy"] <- "Europe"
c$region[c$country=="Portugal"] <- "Europe"
c$region[c$country=="Spain"] <- "Europe"
c$region[c$country=="Belgium"] <- "Europe"
c$region[c$country=="EMEA Region"] <- "Europe"
c$region[c$country=="Germany"] <- "Europe"
c$region[c$country=="ITALY"] <- "Europe"
c$region[c$country=="Russia"] <- "Europe"
c$region[c$country=="Sweden"] <- "Europe"
c$region[c$country=="EMEA Region-Germany"] <- "Europe"
c$region[c$country=="Greece"] <- "Europe"
c$region[c$country=="Russian Federation"] <- "Europe"
c$region[c$country=="Switzerland"] <- "Europe"
c$region[c$country=="EMEA Region-Poland"] <- "Europe"
c$region[c$country=="GREECE"] <- "Europe"
c$region[c$country=="Poland"] <- "Europe"
c$region[c$country=="United Kingdom"] <- "Europe"
c$region[c$country=="Czech Republic"] <- "Europe"
c$region[c$country=="France"] <- "Europe"
c$region[c$country=="Ireland"] <- "Europe"
c$region[c$country=="POLAND"] <- "Europe"
c$region[c$country=="United States"] <- "Americas"
c$region[c$country=="usa"] <- "Americas"
c$region[c$country=="USA"] <- "Europe"
c$region[c$country=="Canada"] <- "Europe"
c$region[c$country=="Mexico"] <- "Europe"
c$region[c$country=="China"] <- "Asia"
c$region[c$country=="Saudi Arabia"] <- "Middle East"
c$region[c$country=="South Africa"] <- "Africa"
str( c, vec.len=0 )
#TODO (p3) randomize
levels( c$country )
p <- ggplot( data = c %>% filter( product == "EksoGT" ) ) +
geom_histogram( aes(x=date),
breaks=seq(as.Date("2014-1-1"),as.Date("2018-10-1"), by="quarter"),
colour="black", fill="#00c0ff", alpha=0.8) +
xlab("") + ylab("") +
doc_theme
p
region_df <- c %>% filter( region != "Unassigned" ) %>% group_by(region) %>% summarise(count=n()) %>% arrange(desc(count))
p <- region_df %>% ggplot() +
geom_bar( aes(x=reorder(region, count), y=count), stat="identity", colour="black", fill="#00c0ff", alpha=0.8 ) +
coord_flip() +
xlab( "" ) + ylab( "" ) +
doc_theme
p
c_open <- c %>% filter( c$status != "closed" )  # open complaints
c_open %>% nrow()  # number of open complaints
c_open %>% filter( status=="new" | status=="assigned") %>% nrow()  # number of complaints not resolved or verified
# reorder product levels in order of representation in the data frame
c_open <- within(c_open,
product <- factor(product,
levels=names(sort(table(product),
decreasing=TRUE))))
p <- ggplot( data=c_open ) +
geom_histogram( aes(x=status), stat="count", colour="black", fill="#00c0ff", alpha=0.8 ) +
ylab( "" ) + xlab( "" ) +
doc_theme
p
c_open_steps <- c_open %>% filter( !is.na(step_count), step_count>0 )  # filter out observations with no step count and no data
sc <- round(mean(c_open_steps$step_count),0)  # average number of steps on device represented by open tickets
sc
sc/1.2e6  # percent of the estimated device life
prod_tab <- table(c_open$product)  # generate show breakdown of open complaints by product
print( prod_tab )
prod_tab["Pick an option"] / nrow(c_open)  # calculate percentage of unassigned product observations
p <- ggplot( data=c_open ) +
geom_bar( aes(x=product), colour="black", fill="#00c0ff", alpha=0.8 ) +
ylab( "" ) + xlab( "" ) +
scale_x_discrete( drop=FALSE ) +
doc_theme
p
p <- ggplot( data = c %>% filter(category=="Major") ) +
geom_density( aes(x=step_count, fill=product=="EksoGT"), colour="black", alpha=0.6 ) +
coord_cartesian( xlim=c(0,1.5e6) ) +
scale_fill_manual( values=c("grey","#00c0ff"), labels=c("other","EksoGT"), name="" ) +
xlab( "" ) + ylab( "" ) +
doc_theme
p
c_temp <- c %>% filter( status!="closed", product=="EksoGT", !is.na(date) )
c_temp <- c_temp %>% mutate( age=as.numeric(as.Date("2018-09-24")-date) ) %>% select( age, -date, region )
p <- c_temp %>% ggplot() +
geom_histogram( aes(x=age, fill=region), binwidth=100, colour="black", alpha=0.8 ) +
xlab( "" ) + ylab( "" ) +
scale_fill_manual( name="", values=c("white","grey","#00c0ff","#555555") ) +
doc_theme
p
c_temp <- c %>% filter(product=="EksoGT", injury!="No injury", injury!="TBD")
# collapse ankle injuries and "no" injuries then rename levels
c_temp <- c_temp %>% mutate( injury=as.character(injury) )  # mutate injury column to character class
c_temp$injury[c_temp$injury=="ankle fracture"] <- "ankle"
c_temp$injury[c_temp$injury=="No injury"] <- "no injury"
c_temp$injury[c_temp$injury=="bruised ankle"] <- "ankle"
c_temp$injury[c_temp$injury=="ankle sprain"] <- "ankle"
c_temp$injury[c_temp$injury=="Orthostatic Hypotension"] <- "o. hypotension"
c_temp$injury[c_temp$injury=="Slight redness at tibias and mild indentations on shins"] <- "shin"
c_temp$injury[c_temp$injury=="Electric shock to PT"] <- "shock"
c_temp <- c_temp %>% mutate( injury=as.factor(injury) )  # mutate column back to Factor
# reorder product levels in order of representation in the data frame
c_temp <- within(c_temp,
injury <- factor(injury,
levels=names(sort(table(injury),
decreasing=TRUE))))
p <- c_temp %>% ggplot() +
geom_bar( aes(x=injury), colour="black", fill="#00c0ff", alpha=0.8 ) +
xlab( "" ) + ylab( "" ) +
doc_theme
p
component_df <- c %>%
filter(product=="EksoGT") %>%
filter(date > as.Date("2016-1-1")) %>%
group_by(component) %>%
summarise(count=n()) %>%
arrange(desc(count)) %>%
top_n(10,count)
p <- component_df %>% ggplot() +
geom_bar( aes(x=reorder(component, count), y=count), stat="identity", colour="black", fill="#00c0ff", alpha=0.8 ) +
coord_flip() +
xlab( "" ) + ylab( "" ) +
doc_theme
p
rc_df <- c %>%
filter(product=="EksoGT") %>%
filter(date > as.Date("2016-1-1")) %>%
group_by(rca_category) %>%
summarise(count=n()) %>%
arrange(desc(count))
p <- rc_df %>% ggplot() +
geom_bar( aes(x=reorder(rca_category, count), y=count), stat="identity", colour="black", fill="#00c0ff", alpha=0.8 ) +
coord_flip() +
xlab( "" ) + ylab( "" ) +
doc_theme
p
c_temp <- c %>% filter(product=="EksoGT")
c_temp$category[is.na(c_temp$category)] <- "Unassigned"  # replace all NA entries with unassigned
p <- ggplot( data = c_temp ) +
geom_histogram(aes(x=date, fill=category),
breaks=seq(as.Date("2014-1-1"),as.Date("2018-10-1"), by="quarter"),
colour="black", alpha=0.8) +
xlab("") + ylab("") +
scale_fill_manual( values=c("grey","#00c0ff","#555555"), name="",  ) +
scale_x_date( date_labels="%Y H" ) +
coord_cartesian( xlim=c(as.Date("2016-4-1"),NA) ) +
doc_theme
p
c %>% group_by(region) %>% summarise(count=n()) %>% arrange(desc(count))
complaints %>% filter_if(is.numeric)
complaints %>% filter_if(is.numeric)
complaints %>% filter_if(is.numeric) %>% skimr:skim()
complaints %>% select_if(is.numeric) %>% skimr:skim()
library(skimr)
complaints %>% select_if(is.numeric) %>% skimr:skim()
complaints %>% select_if(is.numeric) %>% skimr::skim()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(lubridate)
library(readxl)
library(grid)
library(gridExtra)
program_time <- c(15.5,10,7)
#origin="2020-04-25 01:55"
doc_theme <- theme_minimal()  # document theme
# import complaint data frame
data_file <- "C:/Users/duane/repos/dedmonds/code/complaints_db/Complaint_Report_20180924_0024.xlsx"  # cora (win)
#data_file <- "/Volumes/persnl/repos/dedmonds/code/complaints_db/Complaint_Report_20180924_0024.xlsx"  # minic (osx)
complaints <- read_excel( data_file )
#    View( complaints )
# working data frame
c <- complaints %>% select(  # select and rename variables
id,
short_desc = summary,
status,
owner,
component,
resolution_status = resolution,
date = cf_occur_date,
step_count = cf_step_count,
account = cf_affected_units,
sn = cf_affected_units,
country = cf_country,
injury = cf_injury_description,
product = cf_product,
reportable = cf_reportable_event,
service_type = cf_service_type,
category = cf_complaint_category,
rca_category = cf_root_cause_type,
description,
resolution = cf_resolution,
root_cause = cf_root_cause,
investigation_status = cf_investigation_type,
investigation = cf_investigation_summary
)
# coerce factors
c <- c %>% mutate(
id = as.integer(id),
status = as.factor(status),
owner = as.factor(owner),
component = as.factor(component),
resolution_status = as.factor(resolution_status),
date = as.Date(date),
step_count = as.integer(step_count),
account = as.factor(account),
sn = as.factor(sn),
country = as.factor(country),
injury = as.factor(injury),
product = as.factor(product),
reportable = as.logical(reportable),
service_type = as.factor(service_type),
category = as.factor(category),
investigation_status = as.factor(investigation_status),
rca_category = as.factor(rca_category)  # root cause analysis type
)
levels(c$product) <- c("Ekso 1.1", "EksoGT", "Pick an option", "Ekso (1.0)")  # rename factors (levels)
# data cleaning
# add region variable and fill observations
c <- c %>% mutate(region="Unassigned")
c$region[c$country=="Austria"] <- "Europe"
c$region[c$country=="Denmark"] <- "Europe"
c$region[c$country=="FRANCE"] <- "Europe"
c$region[c$country=="Italy"] <- "Europe"
c$region[c$country=="Portugal"] <- "Europe"
c$region[c$country=="Spain"] <- "Europe"
c$region[c$country=="Belgium"] <- "Europe"
c$region[c$country=="EMEA Region"] <- "Europe"
c$region[c$country=="Germany"] <- "Europe"
c$region[c$country=="ITALY"] <- "Europe"
c$region[c$country=="Russia"] <- "Europe"
c$region[c$country=="Sweden"] <- "Europe"
c$region[c$country=="EMEA Region-Germany"] <- "Europe"
c$region[c$country=="Greece"] <- "Europe"
c$region[c$country=="Russian Federation"] <- "Europe"
c$region[c$country=="Switzerland"] <- "Europe"
c$region[c$country=="EMEA Region-Poland"] <- "Europe"
c$region[c$country=="GREECE"] <- "Europe"
c$region[c$country=="Poland"] <- "Europe"
c$region[c$country=="United Kingdom"] <- "Europe"
c$region[c$country=="Czech Republic"] <- "Europe"
c$region[c$country=="France"] <- "Europe"
c$region[c$country=="Ireland"] <- "Europe"
c$region[c$country=="POLAND"] <- "Europe"
c$region[c$country=="United States"] <- "Americas"
c$region[c$country=="usa"] <- "Americas"
c$region[c$country=="USA"] <- "Europe"
c$region[c$country=="Canada"] <- "Europe"
c$region[c$country=="Mexico"] <- "Europe"
c$region[c$country=="China"] <- "Asia"
c$region[c$country=="Saudi Arabia"] <- "Middle East"
c$region[c$country=="South Africa"] <- "Africa"
str( c, vec.len=0 )
#TODO (p3) randomize
View(complaints)
